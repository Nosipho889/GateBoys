@model Gateboys.Models.InventoryProduct

@{
    ViewBag.Title = "Create";
}

<div style="width:100%; height:40px; background-color:#dbdbdb;">
    <h2 class="text-center">Inventory Products</h2>
</div>
<div class="well">
    @using (Html.BeginForm("Create", "InventoryProducts", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <div class="row">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="col-lg-7">
                    <div class="form-group">
                        @Html.LabelFor(model => model.brandName, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.brandName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.brandName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.productName, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.productName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.productName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.productDescription, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.productDescription, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.productDescription, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.categoryId, "Category", htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-8">
                            @Html.DropDownList("categoryId", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ActionLink("Bind new", "Create", "Category_")
                            @Html.ValidationMessageFor(model => model.categoryId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.catalogueId, "Catalogue", htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-8">
                            @Html.DropDownList("catalogueId", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ActionLink("Bind new", "Create", "Catalogue_")
                            @Html.ValidationMessageFor(model => model.catalogueId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.SupplierId, "Supplier", htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-8">
                            @Html.DropDownList("supplierid", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ActionLink("Bind new", "Create", "Suppliers")
                            @Html.ValidationMessageFor(model => model.SupplierId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.quantityOnHand, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.quantityOnHand, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.quantityOnHand, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.unitPrice, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.unitPrice, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.unitPrice, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-8">
                            <input type="file" name="file" value="Upload  File" />
                            @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Create" class="btn btn-default" />
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
